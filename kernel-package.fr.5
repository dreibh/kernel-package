.\" Hey, Emacs! This is an -*- nroff -*- source file.
.\" Copyright (c) 1997 Manoj Srivastava <srivasta@debian.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" $Id: kernel-package.5,v 1.6 2001/12/21 21:46:29 srivasta Exp $
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH KERNEL\-PACKAGE 5 "25 mai 1999" Debian "Manuel Debian GNU/Linux"
.\" NAME should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.SH NOM
kernel\-package \- Un système pour créer des paquets liés aux noyaux
.SH DESCRIPTION
Le paquet \fBkernel\-package\fP est né du désir d'automatiser les étapes du
processus requis pour compiler et installer un noyau personnalisé. Si vous
cherchez des informations sur la façon d'utiliser \fBkernel\-package\fP, jetez
un coup d'oeil sur le manuel \fBmake\-kpkg(1)\fP. Vous trouverez les
instructions de configuration dans \fBkernel\-pkg.conf(5)\fP.
.SH "Avantages de l'utilisation de kernel\-package"
.RS
.TP  
\fBi) Le confort\fP
Il est parfois habituel de compiler les noyaux à la main, ce qui implique
toute une série d'étapes à suivre dans l'ordre\ ; kernel\-package a été écrit
afin de prendre en charge toutes les étapes requises (il va plus loin
maintenant, mais c'est ce qu'il fait essentiellement). Ce point est
particulièrement important pour les débutants. \fBmake\-kpkg\fP gère toutes les
étapes nécessaires à la compilation d'un noyau, et l'installation de noyaux
devient un jeu d'enfant.
.TP 
\fBii) Gestion de multiples images\fP
Vous pouvez maintenir de multiples versions d'images de noyau sur votre
machine sans soucis.
.TP 
\fBiii) Multiples saveurs de la même version du noyau\fP
Vous pouvez maintenir plusieurs «\ saveurs\ » d'une même version du noyau
sur votre machine (vous pouvez avoir une version 2.0.39 stable, et une
version 2.0.39 patchée avec les derniers pilotes, sans risque de contaminer
les modules présents dans \fI/lib/modules)\fP.
.TP 
\fBiv) Réglages par défaut inclus\fP
Le paquet sait que certaines architectures utilisent vmlinuz plutôt que
vmlinux), et d'autres zImage plutôt que bzImage. Il appelle alors la bonne
cible, et prend en charge la copie du bon fichier au bon endroit.
.TP 
\fBv) Entrées pour les modules\fP
Plusieurs autres paquets de modules sont intégrés dans \fBkernel\-package\fP, ce
qui permet de façon transparente la compilation (par exemple) des modules
\fBpcmcia\fP pendant que quelqu'un d'autre au même moment compile le noyau,
tout en ayant l'assurance que les modules ainsi compilés seront compatibles
avec ce noyau.
.TP 
\fBvi) Gestion par dpkg\fP
Vous pouvez gérer les noyaux ainsi créés avec le système de gestion des
paquets, car un fichier .deb est créé, et dpkg peut en prendre le
contrôle. Cela facilite la tâche des autres paquets qui dépendent des
paquets du noyau.
.TP 
\fBvii) Suivi de configuration\fP
Il garde une trace du fichier de configuration de chacune des images du
noyau dans \fI/boot\fP, fichier qui fait partie du paquet. Les images du noyau
et le fichier de configuration sont, à partir de cet instant, toujours
associés.
.TP 
\fBviii) Multiples fichiers de configuration\fP
Vous pouvez spécifier un répertoire de fichiers de configuration, contenant
des fichiers différents pour chaque sous\-architecture (et même différents
fichiers de configuration pour i386, i486, etc.). C'est très pratique pour
ceux qui ont besoin de compiler des noyaux pour une grande variété de
sous\-architectures.
.TP 
\fBix) Paquets .deb associés au noyau\fP
Vous pouvez créer un paquet contenant les entêtes, ou les sources, dans le
format de fichier .deb, ce qui permet de les placer sous le contrôle du
système de gestion des paquets (car parfois d'autres paquets ont besoin que
le système de gestion en connaisse l'existence).
.TP 
\fBx) Création de script du responsable\fP
Puisque le paquet de l'image du noyau est un paquet Debian à part entière,
il est fourni avec les scripts du responsable, qui gère les détails tels que
la possibilité de rendre le disque amorçable, de manipuler les liens
symboliques dans / afin de préserver le contenu des fichiers du chargeur de
démarrage («\ boot loader\ » (il se réfère simplement aux liens symboliques
plutôt qu'aux vrais fichiers d'image, le nom des liens symboliques étant
inchangé, alors que les noms des vrais fichiers image sont modifiés pour
chaque version).
.TP 
\fBxi) Gestion des sous\-architectures\fP
La multitude des sous\-architectures qui ont fleuris à l'ombre du m68k et du
power\-pc est gérée.
.TP 
\fBxii) Gestion des patchs du noyau\fP
Il est possible d'appliquer des patches additionnels du noyau fournis sous
la forme d'un fichier .deb, et de fabriquer par magie un noyau patché, tout
en conservant une arborescence des sources du noyau inchangée.
.TP 
\fBxiii) Images de noyau portables\fP
Vous pouvez compiler un noyau pour un autre ordinateur, en utilisant par
exemple une machine rapide pour la compilation d'un noyau à destination
d'une machine plus lente. C'est vraiment très pratique puisque les modules
sont inclus dans le fichier .deb, et que l'on n'a pas à gérer les modules à
la main.
.TP 
\fBxiv) Personnalisations sur la machine cible\fP
La post\-installation consulte le fichier de configuration de la machine
installée (et non celui de la machine sur laquelle le noyau a été compilé),
et offre à l'administrateur local la possibilité de gérer les liens
symboliques, de lancer ou non la gestion du programme d'amorçage (Ndt\ :\ bootloader), et la création ou non d'une disquette de boot.
.TP 
\fBxv) Points d'entrée lors de l'exécution\fP
Les scripts de post\-installations et de post\-suppression offrent à
l'administrateur de la machine locale la possibilité d'inclure un script
dans le déroulement de l'installation. Cela permet, entre autres, aux
utilisateurs du grub l'ajout ou la suppression d'items pointant sur les
noyaux dans le menu de démarrage (des scripts d'exemple sont fournis dans le
paquet).
.TP 
\fBxvi) Description précise de la version du noyau\fP
Vous pouvez ajouter un descriptif à la version du noyau soit en ligne de
commande, soit en définissant une variable d'environnement. De cette façon,
si votre noyau s'appelle kernel\-image\-2\.4\.1Chez\.Paulo, il a peu de
chances d'être effacé par le noyau 2.4.1 officiel, puisqu'il ne s'agit pas
de la même version.
.RE
.SH "Inconvénients de l'utilisation de make\-kpkg"
.TP 
\fBi) Automatisation\fP
La fabrication de noyaux par cette méthode est une approche prémachée, et il
y a des gens qui préfèrent le brut de fonderie.
.TP 
\fBii) Non traditionnel\fP
Ce n'est pas l'usage hors du monde Debian. Cela rompt avec la
tradition. (D'un autre coté, cela devient une tradition Debian de plus en
plus répandue).
.TP 
\fBiii) Il faut être administrateur\fP
Vous êtes obligé d'utiliser soit \fBfakeroot\fP, \fBsudo\fP, \fBsuper\fP, ou d'être
l'administrateur pour créer le fichier .deb de l'image du noyau (ce n'est
pas pire qu'avant, quand il n'y avait pas \fBfakeroot\fP).
.RE
.SH FICHIERS
\fI/etc/kernel\-pkg.conf\fP. \fI/etc/kernel\-img.conf\fP.
.SH "VOIR AUSSI"
\fBmake\-kpkg\fP(1), \fBmake\fP(1), \fBle manuel GNU Make\fP
.SH BOGUES
Il n'y a pas d'erreur. Toute ressemblance avec un bogue est du
délire. Vraiment.
.SH AUTEUR
Cette page a été écrite par Manoj Srivastava, <srivasta@debian.org>,
pour le système Debian GNU/Linux.
.SH TRADUCTION
Cette page de manuel a été traduite et est maintenue par Sylvain Cherrier
<sylvain.cherrier@free.fr> et les membres de la liste
<debian\-l10n\-french@lists.debian.org> entre 2004 et 2007.
