.\" Hey, Emacs! This is an -*- nroff -*- source file.
.\" Copyright (c) 1997 Manoj Srivastava <srivasta@debian.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" $Id: kernel-package.es.5,v 1.2 2003/06/09 19:15:21 srivasta Exp $
.\"

.\" (c) 2003 Software in the Public Interest
.\" Esta traducción ha sido realizada por Rubén Porras Campo <nahoo@inicia.es>
.\" Está basada en la página de manual original:
.\" versión 1.1 del CVS de
.\" /cvs/debian-doc/manpages/english/kernel-package/kernel-package.5
.\" Revisada por Rudy Godoy <rudy@kernel-panik.org>

.TH KERNEL\-PACKAGE 5 "25 de mayo de 1999" "Debian" "manual Debian GNU/Linux" 
.\" NAME should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.SH NOMBRE
kernel\-package \- Sistema para crear paquetes relacionados con el núcleo.
.SH "DESCRIPCIÓN"
El paquete 
.B kernel-package
nació con el objetivo de automatizar lo pasos rutinarios necesarios para
compilar e instalar un núcleo personalizado. Si busca instrucciones de uso de
.B kernel-package,
consulte
.B make-kpkg (1).
Las instrucciones de configuración se encuentran en
.B kernel-pkg.conf(5).
.SH "Ventajas de usar kernel-package"
.RS
.TP 
.B i) Conveniencia
Yo compilaba los núcleos manualmente, esto requería seguir una serie de pasos en
orden, kernel-package se escribió para automatizar estos pasos (ahora el programa
ha superado este objetivo, pero en esencia, esto es lo que hace). Especialmente
importante para novatos:
.B make-kpkg
realiza todos los pasos necesarios para compilar el núcleo, y la instalación de
núcleos es instantánea.
.TP
.B ii) Soporte para múltiples imágenes
Permite mantener varias versiones de imágenes del núcleo sin ninguna dificultad.
.TP
.B iii) Múltiples sabores de la misma versión del núcleo
Permite mantener varios sabores de la misma versión del núcleo (puede tener una
versión 2.0.36 estable y una 2.0.36 parcheada con los últimos controladores sin
necesidad de preocuparse de contaminar los módulos en
.I /lib/modules).
.TP
.B iv) Comportamientos por omisión
Sabe que algunas arquitecturas no tienen vmlinuz (usan vmlinux en su lugar),
otras usan zImage en vez de bzImage, cuida de generar el objetivo apropiado y
de mover los ficheros al sitio correcto.
.TP
.B v) Enganches de módulos
Algunos otros paquetes para módulos del núcleo están enganchados en 
.B kernel-package,
uno puede compilar sin precauciones, por ejemplo, los módulos
.B pcmcia 
al mismo tiempo que compila el núcleo, y estar seguro de que los módulos
compilados son compatibles.
.TP
.B vi) Soporte para dpkg
Permite usar el sistema de gestión de paquetes para instalar los núcleos.
make-kpkg crea un fichero .deb que posteriormente dpkg puede instalar por usted.
Esto facilita la instalación de otros paquetes que dependen del núcleo.
.TP
.B vii) Seguir la configuración del núcleo
Guarda la configuración de cada imagen del núcleo en
.I /boot,
ésta es parte del paquete que contiene la imagen, debido a esto la imagen del
núcleo y su fichero de configuración siempre están juntos.
.TP
.B viii) Múltiples ficheros de configuración
Permite especificar un directorio con ficheros de configuración, con ficheros de
configuración separados para cada sub-arquitectura (incluso permite distintos
ficheros de configuración para i386, i486, etc). Es realmente útil para
aquellos que necesiten compilar núcleos para una variedad de arquitecturas.
.TP
.B ix) Paquetes .deb auxiliares del núcleo
Permite crear un paquete .deb con las cabeceras, o las fuentes, de esta forma
pueden gestionarse mediante el sistema de paquetes (algunos paquetes dependen de
esta habilidad).
.TP
.B x) Servicios de script para el desarrollador
Puesto que el paquete con la imagen del núcleo es un paquete Debian en toda
regla, éste incluye scripts del encargado del paquete, los cuales se ocuparán
de ofrecer crear un disco de arranque, manipular los enlaces simbólicos en / de
tal forma que los scripts del gestor de arranque puedan ser estáticos (sólo
tienen que referirse al enlace en vez de al fichero real, los nombres de los
enlaces no cambian con las versiones, pero si los ficheros reales con la imagen).
.TP
.B xi) Soporte para varias arquitecturas
Soporta varias arquitecturas que han florecido bajo m68k y power-PC.
.TP
.B xii) Soporte para kernel-patch
Soporte para, opcionalmente aplicar parches al núcleo provistos como un
fichero .deb de kernel-patch, y construir el núcleo parcheado de forma
automática, mientras se mantiene un árbol con las fuentes del núcleo sin parches.
.TP
.B xiii) Imágenes de núcleo portables
Permite compilar un núcleo para otro ordenador, por ejemplo usando un ordenador
rápido para realizar la instalación en uno lento. Los módulos se incluyen en
el .deb, de esta forma se evita tener que manejarlos manualmente.
.TP
.B xiv) Permite personalizar la instalación en el ordenador donde se instala
El script de postinst mira en el fichero de configuración de la máquina donde va
a ser instalado (no en la máquina donde se compiló) y permite al administrador
local decidir respecto a los enlaces simbólicos, si debe de ejecutar el gestor
de arranque, o si desea crear un disquete de arranque.
.TP
.B  xv) Enganches de ejecución
Los scripts de postinst y postrm permiten al administrador local añadir un
script a los enganches de ejecución, esto puede permitir, entre otras cosas, que
los usuarios de grub añadan y eliminen la sección con la imagen del núcleo del
menú de grub (se encuentran scripts de ejemplo en el paquete).
.TP
.B xvi) Sufijos descriptivos a la versión del núcleo
Se puede añadir en línea de órdenes, o bien estableciendo una variable de
entorno. De esta forma, si tu núcleo se llama kernel-image-2.4.1Marta.Casa es
realmente difícil que sea sobreescrito por el núcleo 2.4.1 oficial, ya que no
son la misma versión.
.RE
.SH "Desventajas de usar make-kpkg"
.TP
.B i) Automatización.
Es una forma fácil de compilar el núcleo, no entra en detalles, hay gente que
disfruta haciendo las cosas de una forma más realista.
.TP
.B ii) No es tradicional
No se hace de este modo fuera del mundo de Debian. Rompe la tradición. (Esto ya
se ha comentado, sin embargo rápidamente se está convirtiendo en una tradición
dentro de Debian).
.TP
.B  iii) Necesita permisos de superusuario
Fuerza a usar
.B fakeroot 
,
.B sudo
, 
.B super 
o a ser superusuario para crear el fichero .deb con la imagen del núcleo (esto
no es tan malo como solía ser antes de
.B fakeroot)
.RE
.SH FICHEROS
.I /etc/kernel-pkg.conf.
.I /etc/kernel-img.conf.
.SH "VÉASE TAMBIÉN"
.BR make-kpkg (1),
.BR make (1),
.B La página del manual de GNU Make.
.SH "FALLOS"
No tiene fallos. Cualquier cosa que se lo parezca es un delirio, de verdad.
.SH AUTOR
Esta página del manual fue escrita por Manoj Srivastava <srivasta@debian.org>,
para el sistema Debian GNU/Linux.
