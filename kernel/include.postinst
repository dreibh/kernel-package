#! /usr/bin/perl
#                              -*- Mode: Perl -*- 
# debian.postinst --- 
# Author           : Manoj Srivastava ( srivasta@pilgrim.umass.edu ) 
# Created On       : Sat Apr 27 05:42:43 1996
# Created On Node  : melkor.pilgrim.umass.edu
# Last Modified By : Manoj Srivastava
# Last Modified On : Tue Feb 29 00:12:01 2000
# Last Machine Used: glaurung.green-gryphon.com
# Update Count     : 33
# Status           : Unknown, Use with caution!
# HISTORY          : 
# Description      : 
# 
# 
#
#    $Id: include.postinst,v 1.16 2000/02/29 06:27:15 srivasta Exp $
#


$|=1;

# Predefined values:
my $package="=P";
my $version="=V";

# Ignore all invocations uxcept when called on to configure.
exit 0 unless ($ARGV[0] && $ARGV[0] =~ /configure/);

my $architecture;
chomp($architecture = `dpkg --print-installation-architecture`);
$architecture = "ppc" if $architecture eq "powerpc";

my $stop_and_read = 0;

# most of our work is done in /usr/src.
chdir '/usr/src' or die "Could not chdir to /usr/src:$!";

if (-d "$package") {

  chdir "/usr/src/$package/include" ||
    die "Could not chdir to  /usr/src/$package/include:$!";

  if (! -d "asm-$architecture") {
    warn "/usr/src/$package/include/asm-$architecture does not exist.\n";
  }
  elsif (-e 'asm') {
    if (! -l 'asm') {
      warn "/usr/src/$package/include/asm is not a symlink.\n";
      $stop_and_read++;
    }
    else {
      my $target=readlink 'asm';
      if ("$target" ne "asm-$architecture") {
	if (! unlink 'asm') {
	  warn "could not unlink /usr/src/$package/include/asm: $!\n";
	  warn "It points to /usr/src/$package/include/$target\n";
	  warn  "rather than at /usr/src/$package/include/asm-$architecture\n";
	  $stop_and_read++;
	}
	else {
	  if (! symlink "asm-$architecture", 'asm') {
	    warn "Could not link /usr/src/$package/include/asm:$!\n";
	    warn "to /usr/src/$package/include/asm-$architecture\n";
	    $stop_and_read++;
	  }
	}
      }
    }
  }
}

chdir '/usr/src' or die "Could not chdir to /usr/src:$!";

if ($stop_and_read) {
  my $answer;
  print STDERR " Please Hit return to continue.";
  $answer = <STDIN>;
}

if (-d "/usr/doc") {
  # Well, we still need to handle this, at least for the time being
  if (-d "/usr/share/doc/$package") {
    # So the new doc dir exists, goody
    # handle faliure to remove symlinks
    if (-l "/usr/doc/$package") {
      unlink "/usr/doc/$package";
    }
    my $targetdir;
    my $stargetdir;
    
    if (-x /bin/pwd) {
      chdir('/usr/doc/');
      $targetdir=`/bin/pwd`;
      chdir('/usr/share/doc/');
      $stargetdir=`/bin/pwd`;
      chdir('/');
    }
    if ($targetdir ne $stargetdir) {
      if (-d "/usr/doc/$package") {
	print STDERR "Yikes! The old directory, /usr/doc/$package\n";
	print STDERR "has not ben removed! This is an error; attempting\n";
	print STDERR "repairs";
	if (-f "/usr/doc/$package/.dhelp") {
	  unlink "/usr/doc/$package/.dhelp";
	  rmdir "/usr/doc/$package";
	}
	
	if (-d "/usr/doc/$package") {
	  print STDERR <<"EOFERRONE";
Failed repairs. There are old files in /usr/doc/$package_name/ created
by you or another script. I can copy them over to the new location
/usr/share/doc/$package_name, if you wish, preserving your versions of
the files.  No files shall be over written, instead, backup versions
shall be created in /usr/share/doc/$package_name as needed.

EOFERRONE
  ;
	  my $answer='';
	  print "Shall I copy the files over [Yn]?";
	  $answer=<STDIN>;
	  if ($answer =~ /^n/i) {
	    print "Not copying over, aborting\n";
	    exit 1;
	  }
	  else {
	    system "cp", "-a", "--backup=t",
	    "/usr/doc/$package",
	    "/usr/share/doc/$package/.." ||
	      die "Error copying files over: $?";
	    system "rm", "-rf", "/usr/doc/$package" ||
	      die "Error removing old directory:$?";
	  }
	}
      }
      if (-e "/usr/doc/$package") {
	print STDERR "/usr/doc/$package exists, but is not a directory\n";
	if (-l "/usr/doc/$package") {
	  print STDERR "It is a symbolic link. Overwriting\n";
	  unlink "/usr/doc/$package";
	  symlink "../share/doc/$package",
	  "/usr/doc/$package";
	}
	else {
	  print STDERR "This is an error. Aborting\n";
	  exit 1;
	}
      }
      # File unexists. Free to go ahead and create link
      symlink "../share/doc/$package",
      "/usr/doc/$package";
    }
  }
}


if (-l 'linux') {
  if (-e "linux-$version" ){
    if (! unlink "linux-$version") {
      exit 0;
    }
  }
}


exit 0;

__END__








