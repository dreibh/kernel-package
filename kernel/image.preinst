#! /usr/bin/perl
#                              -*- Mode: Perl -*- 
# image.preinst --- 
# Author           : Manoj Srivastava ( srivasta@tiamat.datasync.com ) 
# Created On       : Sun Jun 14 03:38:02 1998
# Created On Node  : tiamat.datasync.com
# Last Modified By : Manoj Srivastava
# Last Modified On : Thu Jul  5 11:18:47 2001
# Last Machine Used: glaurung.green-gryphon.com
# Update Count     : 40
# Status           : Unknown, Use with caution!
# HISTORY          : 
# Description      : 
# 
# 

# 
#use strict; #for debugging

$|=1;

# Predefined values:
my $version         = "=V";
my $image_in_boot   = "=B";     # Should be empty, mostly
my $no_symlink      = "=S";     # Should be empty, mostly
my $reverse_symlink = "=R";     # Should be empty, mostly
my $do_symlink     = "Yes";	# target machine defined
my $do_boot_enable  = "Yes";	# target machine defined
my $do_bootfloppy   = "Yes";	# target machine defined
my $do_bootloader   = "Yes";	# target machine defined
my $move_image      = '';       # target machine defined
my $do_initrd       = '';       # target machine defined
my $kimage          = "=K";     # Should be empty, mostly
my $loader          = "=L";     # lilo, silo, quik, palo, vmelilo, or nettrom
my $image_dir       = "=D";     # where the image is located
my $clobber_modules = '';       # target machine defined
my $initrd          = "=I";     # initrd kernel
my $use_hard_links  = '';       # hardlinks do not wirk across fs boundaries
my $postinst_hook   = '';       #Normally we do not
my $postrm_hook     = '';       #Normally we do not


my $Loader          = "NoLOADER"; # 
$Loader             = "LILO"     if $loader =~ /^lilo/io;
$Loader             = "SILO"     if $loader =~ /^silo/io;
$Loader             = "QUIK"     if $loader =~ /^quik/io;
$Loader             = "yaboot"   if $loader =~ /^yaboot/io;
$Loader             = "PALO"     if $loader =~ /^palo/io;
$Loader             = "NETTROM"  if $loader =~ /^nettrom/io;
$Loader             = "VMELILO"  if $loader =~ /^vmelilo/io;
$Loader             = "ZIPL"     if $loader =~ /^zipl/io;
$Loader             = "ELILO"    if $loader =~ /^elilo/io;


#known variables
my @boilerplate     = ();
my @silotemplate    = ();
my @quiktemplate    = ();
my @palotemplate    = ();
my @vmelilotemplate = ();
my $bootdevice      = '';
my $rootdevice      = '';
my $rootdisk        = '';
my $rootpartition   = '';
my $image_dest      = "/";
my $realimageloc    = "/$image_dir/";
my $have_conffile   = "";
my $CONF_LOC        = '/etc/kernel-img.conf';
my $relative_links  = '';
my $silent_modules  = '';

die "Pre inst Internal error. Aborting." unless $version;

exit 0 if $ARGV[0] =~ /abort-upgrade/;
exit 1 unless $ARGV[0] =~ /(install|upgrade)/;

if (-r "$CONF_LOC" && -f "$CONF_LOC"  ) {
  if (open(CONF, "$CONF_LOC")) {
    while (<CONF>) {
      chomp;
      s/\#.*$//g;
      next if /^\s*$/;

      $do_symlink      = "" if /do_symlinks\s*=\s*(no|false|0)\s*$/ig;
      $no_symlink      = "" if /no_symlinks\s*=\s*(no|false|0)\s*$/ig;
      $reverse_symlink = "" if /reverse_symlinks\s*=\s*(no|false|0)\s*$/ig;
      $image_in_boot   = "" if /image_in_boot\s*=\s*(no|false|0)\s*$/ig;
      $move_image      = "" if /move_image\s*=\s*(no|false|0)\s*$/ig;
      $clobber_modules = '' if /clobber_modules\s*=\s*(no|false|0)\s*$/ig;
      $do_boot_enable  = '' if /do_boot_enable\s*=\s*(no|false|0)\s*$/ig;
      $do_bootfloppy   = '' if /do_bootfloppy\s*=\s*(no|false|0)\s*$/ig;
      $do_bootloader   = '' if /do_bootloader\s*=\s*(no|false|0)\s*$/ig;
      $do_initrd       = '' if /do_initrd\s*=\s*(no|false|0)\s*$/ig;
      $relative_links  = '' if /relative_links \s*=\s*(no|false|0)\s*$/ig;
      $use_hard_links  = '' if /use_hard_links\s*=\s*(no|false|0)\s*$/ig;
      $silent_modules  = '' if /silent_modules\s*=\s*(no|false|0)\s*$/ig;

      $do_symlink      = "Yes" if /do_symlinks\s*=\s*(yes|true|1)\s*$/ig;
      $no_symlink      = "Yes" if /no_symlinks\s*=\s*(yes|true|1)\s*$/ig;
      $reverse_symlink = "Yes" if /reverse_symlinks\s*=\s*(yes|true|1)\s*$/ig;
      $image_in_boot   = "Yes" if /image_in_boot\s*=\s*(yes|true|1)\s*$/ig;
      $move_image      = "Yes" if /move_image\s*=\s*(yes|true|1)\s*$/ig;
      $clobber_modules = "Yes" if /clobber_modules\s*=\s*(yes|true|1)\s*$/ig;
      $do_boot_enable  = "Yes" if /do_boot_enable\s*=\s*(yes|true|1)\s*$/ig;
      $do_bootfloppy   = "Yes" if /do_bootfloppy\s*=\s*(yes|true|1)\s*$/ig;
      $do_bootloader   = "Yes" if /do_bootloader\s*=\s*(yes|true|1)\s*$/ig;
      $relative_links  = "Yes" if /relative_links\s*=\s*(yes|true|1)\s*$/ig;
      $do_initrd       = "Yes" if /do_initrd\s*=\s*(yes|true|1)\s*$/ig;
      $use_hard_links  = "Yes" if /use_hard_links\s*=\s*(yes|true|1)\s*$/ig;
      $silent_modules  = 'Yes' if /silent_modules\s*=\s*(yes|true|1)\s*$/ig;

      $image_dest      = "$1"  if /image_dest\s*=\s*(\S+)/ig;
      $postinst_hook   = "$1"  if /postinst_hook\s*=\s*(\S+)/ig;
      $postrm_hook     = "$1"  if /postrm_hook\s*=\s*(\S+)/ig;
    }
    close CONF;
    $have_conffile = "Yes";
    $have_conffile = "Yes";	# stop perl complaining
  }
}

# About to upgrade this package from version $2 TO THIS VERSION.
# "prerm upgrade" has already been called for the old version of
# this package.

# For some versions of kernel-package, we had tis warning in the
# postinst, but the rules did not really interpolate the value in.
# Here is a sanity check.
my $pattern = "=" . "I";
$initrd=~ s/^$pattern$//;

if ($initrd && !$do_initrd) {
    print STDERR <<EOF;

You are attempting to install an initrd kernel image (version $version)
This will not work unless you have configured your boot loader to use
initrd.
EOF
    if ($loader =~ m/^lilo/i) {
      print STDERR "As a reminder, in order to configure lilo, you need to\n";
      print STDERR "add an 'initrd=/boot/initrd' in your /etc/lilo.conf\n";
    }
    print STDERR <<EOF;
I repeat, You need to configure your boot loader. If you have already done
so, and you wish to get rid of this message, please put
  `do_initrd = Yes'
in /etc/kernel-img.conf.
EOF
    print STDERR "Do you want to stop now? [Y/n]";
    my $answer = <STDIN>;
    print STDERR "Ok, Aborting\n" unless $answer =~ /^n/i;
    exit 1 unless  $answer =~ /^n/i;
}

if (-d "/lib/modules/$version") {

  if ($clobber_modules) {
    my $ret = system("mv /lib/modules/$version /lib/modules/${version}_$$");
    if ($ret) {
      print STDERR <<EOF;
You are attempting to install a kernel image (version $version)
However, the directory /lib/modules/$version still exists.

As you have instructed, an attempt was made to move the directory out
of the way. Unfortunately, There was a problem moving
/lib/modules/$version to /lib/modules/${version}_$$.  

I suggest you move /lib/modules/$version out of the way manually,
and then try re-installing this image.

I am aborting. 
EOF
      ;
      exit 1;
    }
  }
  elsif ($silent_modules !~ m/YES/i) {
    print STDERR <<EOF;
You are attempting to install a kernel image (version $version)
However, the directory /lib/modules/$version still exists.  If this
directory belongs to a previous kernel-image-$version package, and if
you have deselected some modules, or installed standalone modules
packages, this could be bad. However, if this directory exists because
you are also installing some stand alone modules right now, and they
got unpacked before I did, then this is pretty benign.  Unfortunately,
I can't tell the difference.

If /lib/modules/$version belongs to a old install of
kenel-image-$version, this is your last chance to abort the
installation of this kernel image (nothing has been changed yet).

If this directory is because of stand alone modules being installed
right now, or if it does belong to an older kernel-image-$version
package but you know what you are doing, and if you feel that this
image should be installed despite this anomaly, Please answer n to the
question.

Otherwise, I suggest you move /lib/modules/$version out of the way,
perhaps to /lib/modules/$version.old or something, and then try
re-installing this image.
EOF
  ;
    print STDERR "Do you want to stop now? [Y/n]";
    my $answer = <STDIN>;
    print STDERR "Ok, Aborting\n" unless $answer =~ /^n/i;
    exit 1 unless  $answer =~ /^n/i;
  }
  else {
    print STDERR <<EOF;
The directory /lib/modules/$version still exists. Continuing as directed.
EOF
  ;
  }
}

exit 0
