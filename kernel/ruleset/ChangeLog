2006-01-11  Manoj Srivastava  <srivasta@debian.org>

	* local.mk (kernel-image   kernel_image):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-114
		  Add debian/stamp-build-kernel as a pre-req, we need it
		  to have buildinfo  available.  

2006-01-05  Manoj Srivastava  <srivasta@debian.org>

	* minimal.mk (STAMPS_TO_CLEAN):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-109
		  remove stamp-kernel-configure, nothing uses it
	  (minimal_debian):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-109
		  create ./debian/stamps , for future use 

	* local.mk (BUILD-arch):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-111
		  removed debian/stamp-build-kernel from this target,
		  since only the kernel images really need it, now that we
		  have the prepare target (does not really help anything,
		  but  expresses dependencies better). 

2006-01-04  Manoj Srivastava  <srivasta@debian.org>

	* local.mk (kernel-headers kernel_headers):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-111
		  Make kernel-headers depend on debian/stamp-prepare,
		  instead of  stamp-build-arch, since this means for 2.6.X
		  kernels the full build may not be needed, with the
		  advent of the prepare target. 

2005-12-28  Manoj Srivastava  <srivasta@debian.org>

	* architecture.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-99
		  The new all inclusive powerpc.mk greatly simplifies the
		  selection logic.

2005-12-25  Manoj Srivastava  <srivasta@debian.org>

	* architecture.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-91
		  Accept either x86_64 or amd64 as the architecture, just
		  in case. 
		  New logic for determining which make snippet to use for
		  powerpc related arches, and is now kernel-version
		  aware.

2005-12-19  Manoj Srivastava  <srivasta@debian.org>

	* local.mk (CONFIG-arch):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-89
		  Also depend on conf.vars 

2005-12-03  Manoj Srivastava  <srivasta@debian.org>

	* modules.mk (modules-image modules_image):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-74
		  older kernel-package versions appear to want to run
		  oldconfig in the headers package tree, which failed,
		  since there was inadequate support for running
		  oldconfig. This has also been fixed, since all we really
		  need to depend on is a .config file. Change the
		  dependency from configure to .config (so as not to tun
		  oldconfig) 
	  (modules):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-74
		  Ditto
	  (modules-config modules_config):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-74
		  Ditto 
	  (modules-clean modules_clean):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-74
		  Ditto 

2005-12-01  Manoj Srivastava  <srivasta@debian.org>

	* local.mk (kernel-image-deb stamp-kernel-image):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-73
		  Add kernel-image-deb as a alias for stamp-kernel-image 

2005-11-06  Manoj Srivastava  <srivasta@debian.org>

	* minimal.mk (minimal_debian):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  Do not ever write the control or the changelog if they
		  are already there. (probably the  official version).

2005-11-03  Manoj Srivastava  <srivasta@debian.org>

	* local.mk (CLEAN/$(i_package)):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  Ensure that the templates.master, and the templates, are
		  created even on clean, for the kernel image package. 

2005-11-02  Manoj Srivastava  <srivasta@debian.org>

	* modules.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This file contains the targets responsible for third
		  party module interaction. 

	* minimal.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  New file. This is the new top level file used when the
		  clean target (which does not populate ./debian, indeed,
		  can remove it if present), and to populate ./debian, if
		  more complex tasks are to be performed. The population
		  of ./debian requires that certain variables be set, and
		  this file ensures we use the same makefile snippets that
		  ./debian/rules shall use when actually performing the
		  tasks, so there is no mismatch.  

	* local.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This is yet another of the files that has been reduced
		  to an outline. Apart from the buildpackage target, every
		  thing else has been moved out to file in the targets
		  subdirectory (the top level targets were already moved
		  to common/targets)

	* local-vars.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  Made this file a skeleton/outline as well. All actual
		  variable settings (apart from the stuff to clean) are
		  now done in separate files (which allows us to have a
		  minimal.mk in the first place). 

	* architecture.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  Converted this file into an skeleton/outline, to better
		  allow delegation of responsibility for each architecture
		  to the person in charge of kernel images for that arch. 

