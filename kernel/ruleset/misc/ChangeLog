2005-12-22  Manoj Srivastava  <srivasta@debian.org>

	* defaults.mk (architecture):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-91
		  well, on amd64 boxes,  DEB_HOST_ARCH_CPU does not match
		  what the kernel calls this  architecture. However,
		  DEB_HOST_GNU_CPU does. Anyway, if we find the
		  architecture is being called amd64, we revert it to the
		  kernel  nomenclature of x86_64 

2005-12-03  Manoj Srivastava  <srivasta@debian.org>

	* checks.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-74
		  It was pointed out to me that the ability to build third
		  party modules using make-kpkg and linux kernel headers
		  packages had broken with recent kernel packages, since
		  the check for whether we were in a top level kernel
		  source directory failed to take into account if we were
		  in a header package directory, which is sufficient.

2005-11-08  Manoj Srivastava  <srivasta@debian.org>

	* README: No longer mention FLAVOURS, since that is now gone.

2005-11-07  Manoj Srivastava  <srivasta@debian.org>

	* config.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-64
		  Removed the debian version calculation from here. 

	* version_vars.mk (debian):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-64
			  Moved the calculation of the version number
			  here. It really is both the upstream and the
			  debian revision, despite the name. The default
			  is now $(version)-10.00.Custom 

2005-11-02  Manoj Srivastava  <srivasta@debian.org>

	* version_vars.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This file looks at the top level kernel Makefile, and
		  extracts the components of the version string. It uses
		  the kernel Makefile itself, so it takes into account
		  everything the kernel Makefile itrself pays attention
		  to. This file also calculated the obsolete Debian
		  specific Flavour variable. 

	* patches.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This file deals with setting up variables, looking at
		  directories, and creating a list of valid third party
		  patches available for the kernel being built. 

	* modules.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This file deals with setting up variables, looking at
		  directories, and creating a list of valid third party
		  modules available for the kernel being built. 

	* initrd.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This snippet uses hard coded version based heuristics to
		  determine which set of tools would be viable for
		  providing an initrd or initramdisk for the kernel being
		  built, if initrd's are selected by the user as desired. 

	* defaults.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  This file sets default values for  variables _before_
		  the user configuration files are read. 

	* config.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  Various internal variable set based on defaults and the
		  user configuration files, or from environment vars. 

	* checks.mk:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-53
		  Various checks that would let the build process detect
		  and abort on various error conditions. 

