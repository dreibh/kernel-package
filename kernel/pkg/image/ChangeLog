2006-07-19  Manoj Srivastava  <srivasta@debian.org>

	* postrm (remove_sym_link):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-165
		  Do not assume that the boot loader is defined. 

2006-06-16  Manoj Srivastava  <srivasta@debian.org>

	* postinst (find_inird_tool):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-158
		  Do not look for $kimage  when trying to decide is the
		  initrd symlink is missing. This is the probable cause of
		  the initrd symlink not being updated in corner cases.  

2006-04-20  Manoj Srivastava  <srivasta@debian.org>

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-146
		  Account for the possibility that debconf may not be
		  around at this point. Since we don't use debconf
		  directly, but make the db available for hook scripts,
		  we just punt on checking for debconf on to the scripts.

2006-04-12  Manoj Srivastava  <srivasta@debian.org>

	* postinst (fix_source_link):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-142
		  Clarify that it is the link target that we cannot see
		  the contents of. 

2006-03-22  Manoj Srivastava  <srivasta@debian.org>

	* preinst (check):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-135
		  Made the check return strings, instead of a go/no go
		  boolean. Now this check is advisory. No check on
		  official kernel images. Check for the kernel modules dir
		  only. 

2006-03-21  Manoj Srivastava  <srivasta@debian.org>

	* postinst (run_lilo):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-131
		  Typo in debconf substitution. The variable is loader,
		  not locader 

2006-01-03  Manoj Srivastava  <srivasta@debian.org>

	* postinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-107
		  Now, we try all viable initramfs generators, one after
		  the other, until we find one that works, and only die if
		  all  the available initramfs tools have failed. 

2005-12-31  Manoj Srivastava  <srivasta@debian.org>

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-106
			  set the env var stem before calling hooks  

	* preinst (check):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-106
		  set the env var stem before calling hooks 

	* postrm (image_magic):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-106
		  set the env var stem before calling hooks 

	* postinst (find_inird_tool):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-106
		  set the env var stem before calling hooks

2005-12-27  Manoj Srivastava  <srivasta@debian.org>

	* postinst (find_inird_tool):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
		  Removed db_stop, and added some more diagnostics to show
		  progress. 

	* postrm (image_magic):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-95
		  Ditto.

	* preinst (check):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-101
		  Ditto.

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-101
		  Ditto.  

2005-12-25  Manoj Srivastava  <srivasta@debian.org>

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
			  In the recent 10.X series, kernel package has
			  started producing image packages whose
			  maintainer scripts use debconf for user
			  interaction. Unfortunately, this meant that any
			  hook scripts called in the maintainer scripts
			  for the image package (update-grub comes to
			  mind), if they wrote anything at all to the
			  STDout, would cause debconf to throw hissy fits,
			  since it was expecting commands on STDOUT, not
			  random chatter from the hook scripts.  

			  One solution was to call db_stop before calling
			  the hook scripts, and redirecting stdout
			  to stderr in hte invocation of the
			  scripts. Unfortunately, this made any
			  scripts that used debconf impossible. 

			So, either we ban scripts that are interactive, or
			scripts that scribble on stdout.  Since
			the former makes some functionality
			impossible (some scripts can delicer added
			functionality and flexibility of they can
			interact with users), and the latter just
			needs a code change, I would prefer to ask
			packages that provide scripts to be used
			in kernel image postinst/postrm to use
			debconf for user interaction, and to send
			diagnostics to STDERR. 

	* preinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
		  Do not call db_stop before calling hook scripts,
		  allowing them to use debconf. 

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-95
		  Do not call db_stop before calling hook scripts,
		  allowing them to use debconf. 

	* postinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
		  Do not call db_stop before calling hook scripts,
		  allowing them to use debconf. 

2005-12-23  Manoj Srivastava  <srivasta@debian.org>

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-95
			  Fix postrm issues with stop() make sure that
			  debconf version is still 2.0, and ask for
			  capabilities. Maybe this shall enable us to
			  reliably call  stop() later  

2005-12-22  Manoj Srivastava  <srivasta@debian.org>

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
			  do not redirect stdout for scripts that have to
			  be called in the hooks.  

	* preinst (check):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
		  do not redirect stdout for scripts that have to be
		  called in the hooks. 

	* postrm (image_magic):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-90
		  do not redirect stdout for scripts that have to be
		  called in the hooks. 

	* postinst (find_inird_tool):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-93
		  do not redirect stdout for  scripts that have to be
		  called in the hooks. 

2005-12-21  Manoj Srivastava  <srivasta@debian.org>

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-90
			  Added modules.ofmap to @files_to_remove

2005-12-11  Manoj Srivastava  <srivasta@debian.org>

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-86
			  When done with debconf, call stop: this shall
			  help prevent errors if the hook scripts write to
			  stdout. Also, when calling the hook scripts,
			  redirect stdout to stderr, just in case -- and
			  to ensure that the messages do not silently
			  disappear.  

	* postinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-86
		  Ditto 

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-86
		  Ditto. 

	* preinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-86
		  Ditto 


2005-11-08  Manoj Srivastava  <srivasta@debian.org>

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  Call purge to remove the questions from debconf
		  database when the package is purged.  

2005-11-07  Manoj Srivastava  <srivasta@debian.org>

	* copyright (ftp):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-61
		  Fixed FSF address 

2005-11-06  Manoj Srivastava  <srivasta@debian.org>

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  Use debconf to ask questions.  
		  Removed a bunch of obsolete variables.
		  One of the questions now asked using debconf is the one
		  when we are trying to remove the kernel version
		  we are running, the other is the question asked if we
		  have a valid entry for the version being removed in the
		  boot loader configuration. 

2005-11-05  Manoj Srivastava  <srivasta@debian.org>

	* postinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  Fix link manipulation when reinstalled after
		  removal. The problem was that while the symbolic links
		  were removed when the package was removed, dpkg passed
		  the last-version-configured to the postinst, and we took
		  that as evidence that the package had been installed
		  before. The fix is to always see if a missing symlink
		  needs to be installed, and not touch existing symlinks. 

2005-11-03  Manoj Srivastava  <srivasta@debian.org>

	* config:  New file. This contains all the questions, usually
		  acted upon during the postinst, that can be asked before
		  the package is unpacked.  

	* prerm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  Added variable $package_name  

	* preinst (check):
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  This is the other file to have undergone
		  debconfication. All the questions asked are still here
		  -- we just use debconf to ask the user. Also, the
		  priority, and need to brak non-interactive installs was
		  re-evaluated, and the preinst breaks in far fewer cases
		  than it did before. 

	* postrm:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  Added variable $package_name  

	* postinst:
		  srivasta@debian.org--etch/kernel-package--devel--9.0--patch-55
		  This file has been greatly changed. Firstly, it uses
		  debconf; and gets rid of the code that generated boot
		  floppies and created lilo.conf (that latter was probably
		  illegal under current policy anyway.)A number of
		  questions have been moved to the config file
		  (create-kimage-link-$version, old-initrd-link,
		  old-dir-initrd-link,  old-system-map-link) while others
		  are asked conditionally in the  postinst (depmod-error,
		  depmod-error-initrd, bootloader-test-error,
		  bootloader-error). The postinst has also become far less
		  verbose; the  users are far better educated a decade
		  after this was written, and there are other sources of
		  information about booting than the postinst of a kernel
		  image. 

