.\" Hey, Emacs! This is an -*- nroff -*- source file.
.\" Copyright (c) 2000 Manoj Srivastava <srivasta@debian.org>
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139,
.\" USA.
.\"
.\" $Id: kernel-img.conf.5,v 1.7 2001/01/19 06:24:21 srivasta Exp $
.\"
.TH KERNEL\-IMG.CONF 5 "Mar 21 2000" "Debian" "Debian GNU/Linux manual" 
.\" NAME should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.SH NAME
kernel\-img.conf \- site wide configuration file for kernel image packages
.SH SYNOPSIS
.I /etc/kernel\-img.conf
.SH "DESCRIPTION"
The file 
.I /etc/kernel\-img.conf
is a simple file looked at by the kernel image post installation
process to allow local options for handling some aspects of the
installation, overriding the defaults built into the image itself. 
.PP
The format of the file is a simple 
.B VAR = VALUE 
pair. Boolean values may be specified as
.I Yes, True, 1,
and
.I No, False, 0,
and are case insensitive. 
This file is automatically created by the installation script if
it does not exist, and neither does the symbolic link
.I /vmlinuz.
The script asks the user whether the symbolic link should be created, 
and stashes the answer into 
.I /etc/kernel\-img.conf
.PP
At the moment, the user modifiable variables supported are:
.TP
.B image_in_boot:  
Set to Yes if you want the kernel image 
.I vmlinuz 
in 
.I /boot 
rather than the default 
.I /.  
defaults to No.
.TP
.B do_symlink
By default, the kernel image post installation script shall create or
update the 
.I /vmlinuz
and 
.I /vmlinuz.old 
symbolic links. This is true if a 
.I /vmlinuz
link already exists, however, in absence of
.I /vmlinuz,
the script looks to see if this configuration file exists. If it does
not, the configuration scripts asks the user whether to create the
symbolic link, and stashes the answer in a newly created
.I /etc/kernel-img.conf.
If the configuration file already exists, and 
if this option is set to No, no symbolic link is ever created. This
for people who have other means of booting their machines, and do not
like the symbolic links cluttering up their / directory.  Defaults to Yes. 
.TP
.B no_symlink
Whether to use symlinks to the 
.I image
file. 
Mutually exclusive to 
.I reverse_symlink. 
Can be used with
.I image_in_boot. 
If set to Yes, the image is placed in vmlinuz (instead of /boot/vmlinuz-X.X.XX).
The old vmlinuz is moved to vmlinuz.old unconditionally. (Normally, that
is only done if the version of the new image differs from the old
one). This restricts you to two images, unless you take additional
action and save copies of older images. This is for people who have
boot on a system that does not use symbolic links (and say, they use
loadlin as a boot loader). This is a Hack.
Defaults to No. 
.TP
.B reverse_symlink
Whether to use reverse symlinks (that is, the real file is the one
without the version number, and the number version is the link) to the 
.I image
file. 
Mutually exclusive to 
.I no_symlink.
Can be used with
.I image_in_boot.
Just like 
.I no_symlink, 
except that the
/boot/vmlinuz-X.XX is symbolic linked to the real new
image, vmlinuz. This too restricts you to just two
images unless father action is taken. The older
symlinks are left dangling. This is for people with
boot on umsdos, and who can't see the link in dos, but
do want to know the image version when in Linux. 
This is a Hack.
Defaults to  No.
.TP
.B image_dest 
If you want the symbolic link (or image, if 
.B move_image 
is set) to be stored in elsewhere than
.I /
set this variable to the dir where you want the symbolic link.
Please note that this is not a Boolean variable.  This may be of
help to
.B loadlin
users, who may set both this and
.B move_image 
Defaults to 
.I /
This can be used in conjunction with all above options except
.B image_in_boot,
which would not make sense. (If both 
.B image_dest 
and 
.B image_in_boot
are set, 
.B image_in_boot
overrides)
.TP
.B postinst_hook script
Set this variable to a script to be executed after all the symbolic
links are created, but before running the boot loader or offering to
create a floppy. This script shall be called with two arguments,
the forst being the
.I version
of the kernel image, and the second argument being the
.I location
of the kernel image itself. Errors in the script shall produce a
warning message, but shall be otherwise ignored..
.TP
.B move_image 
Instead of creating symbolic links to (or, is 
.B reverse_symlinks 
is set, from)
.B image_dest,
the image is moved from its location in
.I /boot
into 
.B image_dest.
If 
.B reverse_symlinks 
is set, 
.I /boot
shall contain a symbolic link to the actual image.
This option can be useful to people using loadlin, who may need the
image to be moved to a different, dos partition.
This variable is unset by default.
.TP
.B clobber_modules
If set, the preinst shall silently try to move /lib/modules/version
out of the way if it is the same version as the image being
installed. Use at your own risk.
This variable is unset by default.
.TP
.B do_boot_enable
If set to NO, this short circuits all attempts to create
boot floppies, run lilo, etc. This has the additional
side effect that the postinst is silent. Setting both
.B do_bootfloppy
and 
.B do_bootloader
to NO implies setting
.B do_boot_enable 
to NO. Defaults to Yes.
.TP
.B do_bootfloppy
If set to NO, this prevents the postinst from asking
questions about creating a boot floppy. and no boot
floppy is created. The boot loader shall still be run.
This may cut down on the interaction the postinst has.
(It still prompts before formatting 
.I /dev/fd0) 
Defaults
to Yes.
.TP
.B do_bootloader
If set to NO, this prevents the postinst from running the boot
loader. The user may still be asked to create a floppy, unless 
.B do_bootfloppy
is also set to NO. Defaults to Yes.
.TP
.B relative_links
If set to yes, the kernel image postinst script shall go to extra
ordinary lengths to ensure that the symbolic links are
relative. Normally, the symbolic links are relative when it is easily
determinable that relative links shall work. efaults to No.
.SH FILES
The file described here is
.I /etc/kernel-img.conf.
.SH "SEE ALSO"
.BR make-kpkg (8),
.BR kernel-pkg.conf (5),
.BR make (1),
.B The GNU Make manual.
.SH BUGS
There are no bugs.  Any resemblance thereof is delirium. Really.
.SH AUTHOR
This manual page was written by Manoj Srivastava <srivasta@debian.org>,
for the Debian GNU/Linux system.
